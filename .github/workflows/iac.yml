name: Infrastructure as Code (IaC)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev/staging/prod)'
        required: true
        default: dev
  push:
    branches:
      - dev
      - staging
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set environment
        id: env
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "ENV=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          else
            # branch mapping
            BRANCH=${GITHUB_REF#refs/heads/}
            if [ "$BRANCH" = "main" ]; then echo "ENV=prod" >> $GITHUB_OUTPUT
            else echo "ENV=$BRANCH" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Configure AWS creds
        run: |
          echo "Using environment: ${{ steps.env.outputs.ENV }}"
        env:
          ENV: ${{ steps.env.outputs.ENV }}

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets['AWS_ACCESS_KEY_ID_' + steps.env.outputs.ENV | upper ] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets['AWS_SECRET_ACCESS_KEY_' + steps.env.outputs.ENV | upper ] }}
          AWS_DEFAULT_REGION: us-east-1
        run: terraform -chdir=infra/${{ steps.env.outputs.ENV }} init

      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets['AWS_ACCESS_KEY_ID_' + steps.env.outputs.ENV | upper ] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets['AWS_SECRET_ACCESS_KEY_' + steps.env.outputs.ENV | upper ] }}
          AWS_DEFAULT_REGION: us-east-1
        run: terraform -chdir=infra/${{ steps.env.outputs.ENV }} plan -out=tfplan

      - name: Terraform Apply (auto on dev; require manual for prod)
        if: steps.env.outputs.ENV == 'dev' || github.event_name == 'workflow_dispatch'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets['AWS_ACCESS_KEY_ID_' + steps.env.outputs.ENV | upper ] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets['AWS_SECRET_ACCESS_KEY_' + steps.env.outputs.ENV | upper ] }}
          AWS_DEFAULT_REGION: us-east-1
        run: terraform -chdir=infra/${{ steps.env.outputs.ENV }} apply -auto-approve tfplan
